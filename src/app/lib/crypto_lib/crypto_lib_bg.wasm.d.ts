/* tslint:disable */
/* eslint-disable */
export const memory: WebAssembly.Memory;
export const __wbg_precontract_free: (a: number, b: number) => void;
export const __wbg_get_precontract_commitment: (a: number) => number;
export const __wbg_set_precontract_commitment: (a: number, b: number) => void;
export const __wbg_get_precontract_num_blocks: (a: number) => number;
export const __wbg_set_precontract_num_blocks: (a: number, b: number) => void;
export const __wbg_get_precontract_num_gates: (a: number) => number;
export const __wbg_set_precontract_num_gates: (a: number, b: number) => void;
export const compute_precontract_values: (a: number, b: number, c: any, d: number, e: number) => number;
export const __wbg_checkprecontractresult_free: (a: number, b: number) => void;
export const __wbg_get_checkprecontractresult_success: (a: number) => number;
export const __wbg_set_checkprecontractresult_success: (a: number, b: number) => void;
export const __wbg_get_checkprecontractresult_h_ct: (a: number) => [number, number];
export const __wbg_set_checkprecontractresult_h_ct: (a: number, b: number, c: number) => void;
export const check_precontract: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const __wbg_checkctresult_free: (a: number, b: number) => void;
export const __wbg_get_checkctresult_decrypted_file: (a: number) => [number, number];
export const __wbg_set_checkctresult_decrypted_file: (a: number, b: number, c: number) => void;
export const check_received_ct_key: (a: number, b: number, c: any, d: number, e: number, f: number, g: number) => number;
export const __wbg_disputeargument_free: (a: number, b: number) => void;
export const __wbg_get_disputeargument_circuit: (a: number) => number;
export const __wbg_set_disputeargument_circuit: (a: number, b: number) => void;
export const __wbg_get_disputeargument_ct: (a: number) => [number, number];
export const __wbg_set_disputeargument_ct: (a: number, b: number, c: number) => void;
export const __wbg_get_disputeargument_opening_value: (a: number) => [number, number];
export const __wbg_set_disputeargument_opening_value: (a: number, b: number, c: number) => void;
export const disputeargument_to_bytes: (a: number) => [number, number];
export const disputeargument_from_bytes: (a: number, b: number) => number;
export const make_argument: (a: number, b: number, c: number, d: number, e: number, f: number) => [number, number];
export const __wbg_argumentcheckresult_free: (a: number, b: number) => void;
export const __wbg_get_argumentcheckresult_is_valid: (a: number) => number;
export const __wbg_set_argumentcheckresult_is_valid: (a: number, b: number) => void;
export const __wbg_get_argumentcheckresult_supports_buyer: (a: number) => number;
export const __wbg_set_argumentcheckresult_supports_buyer: (a: number, b: number) => void;
export const __wbg_get_argumentcheckresult_error: (a: number) => [number, number];
export const __wbg_set_argumentcheckresult_error: (a: number, b: number, c: number) => void;
export const check_argument: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const __wbg_evaluatedcircuit_free: (a: number, b: number) => void;
export const evaluatedcircuit_to_bytes: (a: number) => [number, number];
export const evaluatedcircuit_from_bytes: (a: number, b: number) => number;
export const evaluate_circuit: (a: number, b: number, c: number, d: number, e: number, f: number, g: number, h: number) => number;
export const hpre: (a: number, b: number, c: number, d: number) => [number, number];
export const __wbg_finalstepcomponents_free: (a: number, b: number) => void;
export const __wbg_get_finalstepcomponents_gate: (a: number) => [number, number];
export const __wbg_set_finalstepcomponents_gate: (a: number, b: number, c: number) => void;
export const __wbg_get_finalstepcomponents_values: (a: number) => [number, number];
export const __wbg_set_finalstepcomponents_values: (a: number, b: number, c: number) => void;
export const __wbg_get_finalstepcomponents_curr_acc: (a: number) => [number, number];
export const __wbg_set_finalstepcomponents_curr_acc: (a: number, b: number, c: number) => void;
export const __wbg_get_finalstepcomponents_proof1: (a: number) => any;
export const __wbg_set_finalstepcomponents_proof1: (a: number, b: any) => void;
export const __wbg_get_finalstepcomponents_proof2: (a: number) => any;
export const __wbg_set_finalstepcomponents_proof2: (a: number, b: any) => void;
export const __wbg_get_finalstepcomponents_proof3: (a: number) => any;
export const __wbg_set_finalstepcomponents_proof3: (a: number, b: any) => void;
export const __wbg_get_finalstepcomponents_proof_ext: (a: number) => any;
export const __wbg_set_finalstepcomponents_proof_ext: (a: number, b: any) => void;
export const compute_proofs: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const compute_proofs_left: (a: number, b: number, c: number, d: number, e: number, f: number, g: number) => number;
export const compute_proof_right: (a: number, b: number, c: number, d: number) => any;
export const __wbg_set_precontract_ct: (a: number, b: number, c: number) => void;
export const __wbg_set_precontract_circuit_bytes: (a: number, b: number, c: number) => void;
export const __wbg_set_checkprecontractresult_h_circuit: (a: number, b: number, c: number) => void;
export const __wbg_set_precontract_h_ct: (a: number, b: number, c: number) => void;
export const __wbg_set_precontract_h_circuit: (a: number, b: number, c: number) => void;
export const __wbg_set_precontract_description: (a: number, b: number, c: number) => void;
export const __wbg_set_checkctresult_success: (a: number, b: number) => void;
export const __wbg_get_checkctresult_success: (a: number) => number;
export const __wbg_get_precontract_ct: (a: number) => [number, number];
export const __wbg_get_precontract_circuit_bytes: (a: number) => [number, number];
export const __wbg_get_checkprecontractresult_h_circuit: (a: number) => [number, number];
export const __wbg_get_precontract_h_ct: (a: number) => [number, number];
export const __wbg_get_precontract_h_circuit: (a: number) => [number, number];
export const __wbg_get_precontract_description: (a: number) => [number, number];
export const __wbg_gate_free: (a: number, b: number) => void;
export const __wbg_get_gate_opcode: (a: number) => number;
export const __wbg_set_gate_opcode: (a: number, b: number) => void;
export const __wbg_get_gate_sons: (a: number) => [number, number];
export const __wbg_set_gate_sons: (a: number, b: number, c: number) => void;
export const gate_flatten: (a: number) => [number, number];
export const gate_dummy: () => number;
export const gate_is_dummy: (a: number) => number;
export const gate_abi_encoded: (a: number) => [number, number];
export const __wbg_compiledcircuit_free: (a: number, b: number) => void;
export const __wbg_get_compiledcircuit_version: (a: number) => number;
export const __wbg_set_compiledcircuit_version: (a: number, b: number) => void;
export const __wbg_get_compiledcircuit_block_size: (a: number) => number;
export const __wbg_set_compiledcircuit_block_size: (a: number, b: number) => void;
export const __wbg_get_compiledcircuit_num_blocks: (a: number) => number;
export const __wbg_set_compiledcircuit_num_blocks: (a: number, b: number) => void;
export const compiledcircuit_to_bytes: (a: number) => [number, number];
export const compiledcircuit_from_bytes: (a: number, b: number) => number;
export const compile_basic_circuit: (a: number, b: number, c: number) => number;
export const __wbg_compiledcircuitwithconstants_free: (a: number, b: number) => void;
export const __wbg_set_compiledcircuitwithconstants_version: (a: number, b: number) => void;
export const __wbg_set_compiledcircuitwithconstants_block_size: (a: number, b: number) => void;
export const __wbg_get_compiledcircuitwithconstants_version: (a: number) => number;
export const __wbg_get_compiledcircuitwithconstants_block_size: (a: number) => number;
export const __wbg_commitment_free: (a: number, b: number) => void;
export const __wbg_get_commitment_c: (a: number) => [number, number];
export const __wbg_set_commitment_c: (a: number, b: number, c: number) => void;
export const __wbg_get_commitment_o: (a: number) => [number, number];
export const __wbg_set_commitment_o: (a: number, b: number, c: number) => void;
export const commit: (a: number, b: number) => number;
export const hex_to_bytes: (a: number, b: number) => [number, number];
export const bytes_to_hex: (a: number, b: number) => [number, number];
export const decrypt_block_js: (a: number, b: number) => [number, number];
export const encrypt_block_js: (a: number, b: number) => [number, number];
export const acc_js: (a: number, b: number) => [number, number];
export const prove_js: (a: number, b: number, c: any) => any;
export const prove_ext_js: (a: number, b: number) => any;
export const sha256_compress_final_js: (a: number, b: number) => [number, number];
export const sha256_compress_js: (a: number, b: number) => [number, number];
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_2: WebAssembly.Table;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __externref_drop_slice: (a: number, b: number) => void;
export const __wbindgen_start: () => void;
